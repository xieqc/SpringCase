<ehcache>
  <!-- <diskStore path="java.io.tmpdir|d:\\myapp\\cache|/tmp/ehcachedata/"/> -->
  <diskStore path="/tmp/ehcachedata/springcase/"/>
 	<defaultCache         
 			maxElementsInMemory="10000" 
            eternal="false"
            timeToIdleSeconds="300" 
            timeToLiveSeconds="600"
            overflowToDisk="true" 
            diskPersistent="false"
            diskExpiryThreadIntervalSeconds="120"
            memoryStoreEvictionPolicy = "LFU" 
        />

<!-- 
<cache name = "SimplePageCachingFilter" 

           maxElementsInMemory = "10000" 
           maxElementsOnDisk = "10000" 
           eternal = "false" 
           overflowToDisk = "true" 
           diskSpoolBufferSizeMB = "20" 
           timeToIdleSeconds = "10" 
           timeToLiveSeconds = "10" 
           memoryStoreEvictionPolicy = "LFU" 

            />
 -->


</ehcache>
<!-- 

 
SimplePageCachingFilter 是缓存的名字，
maxElementsInMemory 表示内存中SimplePageCachingFilter 缓存中元素的最大数量为10 ，
maxElementsOnDisk 是指持久化该缓存的元素到硬盘上的最大数量也为10 （），
eternal=false 意味着该缓存会死亡。overflowToDisk=true 
意思是表示当缓存中元素的数量超过限制时，就把这些元素持久化到硬盘，如果overflowToDisk 是false ，
那么maxElementsOnDisk 的设置就没有什么意义了。
memoryStoreEvictionPolicy=LFU 是指按照缓存的hit 值来清除，
也就是说缓存满了之后，新的对象需要缓存时，将会将缓存中hit 值最小的对象清除出缓存，给新的对象腾出地方来了（文章最后有ehcache 中自带的3 种缓存清空策略的介绍）。
-->
